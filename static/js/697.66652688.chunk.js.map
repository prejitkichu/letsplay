{"version":3,"file":"static/js/697.66652688.chunk.js","mappings":"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","sources":["api/apiConstant.ts","api/axios.ts","pages/Dashboard.tsx"],"sourcesContent":["const url ='https://script.google.com/macros/s/AKfycbwCsriX7oADfBt0itTdU8amIt7KLAn3Z_LClAZOGZ31JsXTNqDcZgCM4ICps-RZNoQU/exec';\r\nexport const apiLink =  url+'?action=';","import axios from 'axios';\r\nimport { apiLink } from './apiConstant'\r\n\r\nexport default axios.create({\r\n  baseURL: apiLink,\r\n  headers: { \r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});\r\n\r\n ","import * as React from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport \"../App.css\"\r\nimport { useState, useEffect} from 'react';\r\nimport apiClient  from \"../api/axios\";\r\nimport {apiLink}  from \"../api/apiConstant\"; \r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  State } from '../state';\r\n\r\nconst defaultUser = {\r\n  \"username\": \"\",\r\n  \"phone\": 0,\r\n  \"paidamount\": 0,\r\n  \"totaldue\": 0\r\n}\r\n\r\n  const Dashboard = ()=>{ \r\n    const [players, setplayers] = useState([]);\r\n    const [userDetail, setuserDetail] = useState(defaultUser);\r\n    const [dates, setdates] = useState(''); \r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [dateDiv, setdateDiv] = useState('');\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [inflag, setinflag] = useState(false);\r\n    const [hrefLink , sethrefLink] = useState('');\r\n    const navigate= useNavigate();\r\n    \r\n    //  <a href=\"https://api.whatsapp.com/send?phone=919036120310\" target=\"_blank\">Link Icon</a>\r\n\r\n    const {userName} = useSelector((state: State) => state.bank);\r\n\r\n    async function getAllData() {\r\n      setisLoading(true);\r\n      try {\r\n        const res = await apiClient.get(`${apiLink}getPlayerName&playDate=${dates}`);  \r\n        setplayers( res.data)   \r\n        setdateDiv(res.data[0][2]);  \r\n      } catch (err: any) {\r\n        console.log( err.response?.data || err );        \r\n      }\r\n      getuserDetails(userName)\r\n      setisLoading(false);  \r\n    }\r\n\r\n    async function getuserDetails(username: string) {\r\n      try {\r\n        const res = await apiClient.get(`${apiLink}getuserDetails&username=${username}`);          \r\n        setuserDetail(res.data); \r\n         \r\n      } catch (err: any) {\r\n        console.log( err.response?.data || err );\r\n        \r\n      }\r\n      setisLoading(false);\r\n    }\r\n\r\n    useEffect(()=>{       \r\n      const href = `https://api.whatsapp.com/send?phone=91${userDetail?.phone}`       \r\n      sethrefLink(href)\r\n    }, [userDetail])\r\n    \r\n    const udata = {\r\n      name: \"ranjith\",\r\n      age:10,\r\n      phone:998866\r\n    }\r\n\r\n    useEffect(()=>{\r\n      setisLoading(true);\r\n      const username = localStorage.getItem('username'); \r\n      if(username){  \r\n        getuserDetails(username)\r\n      }\r\n      else{ \r\n        navigate('/home') \r\n      }      \r\n      setdateDiv('')      \r\n      setplayers([]) \r\n      \r\n    },[])\r\n\r\nuseEffect(()=>{\r\n  const d = moment(startDate).format('ddd - D-MMM-YYYY');\r\n  setdates(d); \r\n  setinflag(false)\r\n},[startDate])\r\n\r\n \r\n\r\nasync function onclickHandler() {    \r\n\r\n  if(players)\r\n  {\r\n    const player = players.find(item=> item[0]===userName)\r\n    setinflag(player?true:false)\r\n  }\r\n  setisLoading(true)\r\n  const url=`${apiLink}addPlayers`\r\n  \r\n  let data={\r\n    name: userName,\r\n    position:\"forward\",\r\n    dateandtime:dates,\r\n    groundfee:125,\r\n    remarks: \"IN\",\r\n\r\n  };\r\n    \r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'no-cors', // no-cors, *cors, same-origin\r\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  }) \r\n  .then((res) => res)\r\n  .then((post) => post.json())\r\n  .catch((err) => {\r\n     console.log(err);\r\n  }); \r\n  \r\n  getAllData();\r\n return response; // parses JSON response into native JavaScript objects\r\n \r\n}\r\n\r\n  \r\n    return (\r\n      <>\r\n      \r\n      <div className=\"d-flex justify-content-center mb-3\">\r\n      \r\n      <div className=\"p-3 my-1 mainArea \">   \r\n      {dateDiv?.length > 0 && \r\n          <div className=\"px-1 \"><mark>{dates} </mark> </div> \r\n        }    \r\n        {isLoading && <p>Loading...</p>}\r\n       {(players && !isLoading) &&\r\n        players.map((item:any, index: number)=> {return(\r\n          <p className=\"m-0\" key={index}>{`${index+1} - ${item[0]}`}</p> \r\n        )}) }\r\n        {inflag && \r\n          <div className=\"m-1 \"><mark>{'you are already in'} </mark> </div> }\r\n       </div>\r\n       \r\n                \r\n      </div>\r\n   \r\n      \r\n      <div className=\"d-flex justify-content-center mb-3\">\r\n        <div className=\"p-2 mx-1\">{`Paid : ${userDetail?.paidamount}`}</div>\r\n        <div className=\"p-2 mx-1\">{ `Balance : ${userDetail?.totaldue}`} </div> \r\n      </div>\r\n      <div className=\"d-flex justify-content-center mb-3\">\r\n      {hrefLink?.length>0 && <a href={hrefLink} target=\"_blank\">Link Icon</a>}\r\n        <div className=\"p-2 mx-1\">\r\n          <DatePicker \r\n          selected={startDate} \r\n          dateFormat=\"EEE - d-MMM-yyyy\"  \r\n          minDate={new Date()}        \r\n          onChange={(date:Date) => { setplayers([]); setStartDate(date)}} />        \r\n          </div>\r\n          <div className=\"p-2 mx-1\">\r\n            <button className=\"btn btn-warning btn-sm\" onClick={onclickHandler}>add me</button></div>\r\n      </div>\r\n       \r\n      </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Dashboard"],"names":["apiLink","url","axios","baseURL","headers","defaultUser","useState","players","setplayers","userDetail","setuserDetail","dates","setdates","Date","startDate","setStartDate","dateDiv","setdateDiv","isLoading","setisLoading","inflag","setinflag","hrefLink","sethrefLink","navigate","useNavigate","userName","useSelector","state","bank","getAllData","apiClient","res","data","console","log","response","getuserDetails","username","useEffect","href","phone","player","find","item","name","position","dateandtime","groundfee","remarks","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","then","post","json","catch","err","localStorage","getItem","d","moment","format","className","length","map","index","paidamount","totaldue","target","selected","dateFormat","minDate","onChange","date","onClick"],"sourceRoot":""}